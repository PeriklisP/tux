// ==========================================================================
//   Mixins.
// ==========================================================================

// Breakpoint queries
// @link https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints

// Name of the next breakpoint, or null for the last breakpoint.
@function bp-value-next($key, $breakpoints: $grid-breakpoints, $breakpoint-keys: map-keys($breakpoints)) {
	$i: index($breakpoint-keys, $key);
	@return if($i < length($breakpoint-keys), nth($breakpoint-keys, $i + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
@function bp-value-min($key, $breakpoints: $grid-breakpoints) {
	$min: map-get($breakpoints, $key);
	@return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
@function bp-value-max($key, $breakpoints: $grid-breakpoints) {
	$next: bp-value-next($key, $breakpoints);
	@return if($next, bp-value-min($next, $breakpoints) - 1px, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
@function breakpoint-infix($key, $breakpoints) {
	@return if(bp-value-min($key, $breakpoints) == null, "", "-#{$key}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
@mixin breakpoint-min($key, $breakpoints: $grid-breakpoints) {
	$min: bp-value-min($key, $breakpoints);

	@if $min {
		@media (min-width: $min) {
			@content;
		}
	} @else {
		@content;
	}
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
@mixin breakpoint-max($key, $breakpoints: $grid-breakpoints) {
	$max: bp-value-max($key, $breakpoints);

	@if $max {
		@media (max-width: $max) {
			@content;
		}
	} @else {
		@content;
	}
}